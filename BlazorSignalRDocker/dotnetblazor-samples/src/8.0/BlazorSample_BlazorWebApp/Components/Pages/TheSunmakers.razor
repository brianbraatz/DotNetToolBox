@page "/the-sunmakers"
@inject IDataAccess DataRepository

<PageTitle>The Sunmakers</PageTitle>

<h1>Doctor Who&reg;: The Sunmakers Actors (Villains)</h1>

@if (actors != null)
{
    <ul>
        @foreach (var actor in actors)
        {
            <li>@actor.FirstName @actor.LastName</li>
        }
    </ul>
}

<a href="https://www.doctorwho.tv">Doctor Who</a>  is a
    registered trademark of the <a href="https://www.bbc.com/">BBC</a>. 
<a href="https://www.doctorwho.tv/stories/the-sunmakers">The Sunmakers</a>

@code {
    private IReadOnlyList<Actor>? actors;

    protected override async Task OnInitializedAsync()
    {
        actors = await DataRepository.GetAllActorsAsync();
    }

    public class Actor
    {
        public string? FirstName { get; set; }
        public string? LastName { get; set; }
    }

    public interface IDataAccess
    {
        public Task<IReadOnlyList<Actor>> GetAllActorsAsync();
    }

    public class DataAccess : IDataAccess
    {
        public Task<IReadOnlyList<Actor>> GetAllActorsAsync() => 
            Task.FromResult(GetActors());
    }

    /*
     * Register the service in Program.cs:
     * using static BlazorSample.Components.Pages.TheSunmakers;
     * builder.Services.AddScoped<IDataAccess, DataAccess>();
    */

    public static IReadOnlyList<Actor> GetActors()
    {
        return new Actor[]
        {
           new() { FirstName = "Henry", LastName = "Woolf" },
           new() { FirstName = "Jonina", LastName = "Scott" },
           new() { FirstName = "Richard", LastName = "Leech" }
        };
    }
}
